{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/files';\n\n// Upload file\nexport const uploadFile = async file => {\n  const formData = new FormData();\n  formData.append('file', file);\n  try {\n    const response = await axios.post(`${API_URL}/upload`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Erreur lors de l\\'envoi du fichier :', error.message);\n    throw error;\n  }\n};\n\n// Get all files\nexport const getAllFiles = async () => {\n  try {\n    const response = await axios.get(`${API_URL}`);\n    return response.data;\n  } catch (error) {\n    console.error('Erreur lors de la récupération des fichiers :', error.message);\n    throw error;\n  }\n};\n\n// Download file\nexport const downloadFile = async filename => {\n  try {\n    const response = await axios.get(`${API_URL}/download/${filename}`, {\n      responseType: 'blob' // Blob pour les téléchargements\n    });\n    return response;\n  } catch (error) {\n    console.error('Erreur lors du téléchargement du fichier :', error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","uploadFile","file","formData","FormData","append","response","post","headers","data","error","console","message","getAllFiles","get","downloadFile","filename","responseType"],"sources":["C:/Users/asus/Desktop/front-end/src/component/fileService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = '/api/files';\r\n\r\n// Upload file\r\nexport const uploadFile = async (file) => {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n\r\n  try {\r\n    const response = await axios.post(`${API_URL}/upload`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erreur lors de l\\'envoi du fichier :', error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get all files\r\nexport const getAllFiles = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erreur lors de la récupération des fichiers :', error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Download file\r\nexport const downloadFile = async (filename) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/download/${filename}`, {\r\n      responseType: 'blob', // Blob pour les téléchargements\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Erreur lors du téléchargement du fichier :', error.message);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,YAAY;;AAE5B;AACA,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAI,IAAK;EACxC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAE7B,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,OAAO,SAAS,EAAEG,QAAQ,EAAE;MAC/DK,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAACE,OAAO,CAAC;IACpE,MAAMF,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMP,KAAK,CAACe,GAAG,CAAC,GAAGd,OAAO,EAAE,CAAC;IAC9C,OAAOM,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC7E,MAAMF,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMP,KAAK,CAACe,GAAG,CAAC,GAAGd,OAAO,aAAagB,QAAQ,EAAE,EAAE;MAClEC,YAAY,EAAE,MAAM,CAAE;IACxB,CAAC,CAAC;IACF,OAAOX,QAAQ;EACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC1E,MAAMF,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}