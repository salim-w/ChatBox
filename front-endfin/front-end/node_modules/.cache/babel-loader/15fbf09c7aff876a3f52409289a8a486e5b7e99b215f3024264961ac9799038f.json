{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\front-end\\\\src\\\\proxy\\\\StompProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useRef } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { addMessage } from \"../redux/action\";\nimport StompClient from './stomp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageContext = /*#__PURE__*/createContext();\nexport const useMessageContext = () => {\n  _s();\n  return useContext(MessageContext);\n};\n_s(useMessageContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function StompProvider({\n  children\n}) {\n  _s2();\n  const clientRef = useRef(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const client = new StompClient();\n    clientRef.current = client;\n    client.setMessageCallback(message => {\n      console.log('Dispatching message:', message);\n      dispatch(addMessage(message)); // Utilise l'action Redux\n    });\n    try {\n      client.activate();\n      console.log('STOMP client activating...');\n    } catch (error) {\n      console.error('Error activating STOMP client:', error);\n    }\n    return () => {\n      if (client.connected) {\n        client.deactivate();\n        console.log('STOMP client deactivated.');\n      }\n    };\n  }, [dispatch]);\n  const publishMessage = (destination, message) => {\n    const client = clientRef.current;\n    if (client && client.connected) {\n      console.log('Publishing message to', destination, ':', message);\n      client.publish({\n        destination: destination,\n        body: JSON.stringify(message)\n      });\n    } else {\n      console.error('STOMP client is not connected');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MessageContext.Provider, {\n    value: {\n      publishMessage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s2(StompProvider, \"NMVRur2y019RO4jqCCREWyWYKFw=\", false, function () {\n  return [useDispatch];\n});\n_c = StompProvider;\nvar _c;\n$RefreshReg$(_c, \"StompProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useRef","useDispatch","addMessage","StompClient","jsxDEV","_jsxDEV","MessageContext","useMessageContext","_s","StompProvider","children","_s2","clientRef","dispatch","client","current","setMessageCallback","message","console","log","activate","error","connected","deactivate","publishMessage","destination","publish","body","JSON","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/asus/Desktop/front-end/src/proxy/StompProvider.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useRef } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addMessage } from \"../redux/action\";\r\nimport StompClient from './stomp';\r\n\r\nconst MessageContext = createContext();\r\nexport const useMessageContext = () => useContext(MessageContext);\r\n\r\nexport function StompProvider({ children }) {\r\n    const clientRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const client = new StompClient();\r\n        clientRef.current = client;\r\n\r\n        client.setMessageCallback((message) => {\r\n            console.log('Dispatching message:', message);\r\n            dispatch(addMessage(message)); // Utilise l'action Redux\r\n        });\r\n\r\n        try {\r\n            client.activate();\r\n            console.log('STOMP client activating...');\r\n        } catch (error) {\r\n            console.error('Error activating STOMP client:', error);\r\n        }\r\n\r\n        return () => {\r\n            if (client.connected) {\r\n                client.deactivate();\r\n                console.log('STOMP client deactivated.');\r\n            }\r\n        };\r\n    }, [dispatch]);\r\n\r\n    const publishMessage = (destination, message) => {\r\n        const client = clientRef.current;\r\n        if (client && client.connected) {\r\n            console.log('Publishing message to', destination, ':', message);\r\n            client.publish({\r\n                destination: destination,\r\n                body: JSON.stringify(message)\r\n            });\r\n        } else {\r\n            console.error('STOMP client is not connected');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <MessageContext.Provider value={{ publishMessage }}>\r\n            {children}\r\n        </MessageContext.Provider>\r\n    );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC3E,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,OAAOC,WAAW,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,cAAc,gBAAGT,aAAa,CAAC,CAAC;AACtC,OAAO,MAAMU,iBAAiB,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMV,UAAU,CAACQ,cAAc,CAAC;AAAA;AAACE,EAAA,CAArDD,iBAAiB;AAE9B,OAAO,SAASE,aAAaA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACxC,MAAMC,SAAS,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ,MAAMe,MAAM,GAAG,IAAIX,WAAW,CAAC,CAAC;IAChCS,SAAS,CAACG,OAAO,GAAGD,MAAM;IAE1BA,MAAM,CAACE,kBAAkB,CAAEC,OAAO,IAAK;MACnCC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,OAAO,CAAC;MAC5CJ,QAAQ,CAACX,UAAU,CAACe,OAAO,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC;IAEF,IAAI;MACAH,MAAM,CAACM,QAAQ,CAAC,CAAC;MACjBF,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC7C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IAC1D;IAEA,OAAO,MAAM;MACT,IAAIP,MAAM,CAACQ,SAAS,EAAE;QAClBR,MAAM,CAACS,UAAU,CAAC,CAAC;QACnBL,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAC5C;IACJ,CAAC;EACL,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,MAAMW,cAAc,GAAGA,CAACC,WAAW,EAAER,OAAO,KAAK;IAC7C,MAAMH,MAAM,GAAGF,SAAS,CAACG,OAAO;IAChC,IAAID,MAAM,IAAIA,MAAM,CAACQ,SAAS,EAAE;MAC5BJ,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEM,WAAW,EAAE,GAAG,EAAER,OAAO,CAAC;MAC/DH,MAAM,CAACY,OAAO,CAAC;QACXD,WAAW,EAAEA,WAAW;QACxBE,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,OAAO;MAChC,CAAC,CAAC;IACN,CAAC,MAAM;MACHC,OAAO,CAACG,KAAK,CAAC,+BAA+B,CAAC;IAClD;EACJ,CAAC;EAED,oBACIhB,OAAA,CAACC,cAAc,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAEP;IAAe,CAAE;IAAAd,QAAA,EAC9CA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAElC;AAACxB,GAAA,CA9CeF,aAAa;EAAA,QAERR,WAAW;AAAA;AAAAmC,EAAA,GAFhB3B,aAAa;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}